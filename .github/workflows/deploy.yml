name: Deploy Paquetes Service

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  SERVICE_NAME: paquetes
  SERVICE_PORT: 8081

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Build JAR
        run: mvn clean package -DskipTests

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          # Crear el archivo de forma más robusta
          cat << 'EOF' > ~/.ssh/id_rsa
          ${{ secrets.EC2_SSH_KEY }}
          EOF
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Test SSH connection
        run: |
          if ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -o ConnectTimeout=10 ec2-user@${{ secrets.EC2_HOST }} "echo '✅ SSH OK'"; then
            echo "SSH connection successful"
          else
            echo "SSH connection failed"
            echo "Debug info:"
            ls -la ~/.ssh/
            echo "Key content (first 100 chars):"
            head -c 100 ~/.ssh/id_rsa
            exit 1
          fi

      - name: Deploy to EC2
        run: |
          scp -i ~/.ssh/id_rsa target/*.jar ec2-user@${{ secrets.EC2_HOST }}:/home/ec2-user/$SERVICE_NAME/
          
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_HOST }} "
            cd /home/ec2-user/$SERVICE_NAME
            
            # Backup
            if ls *.jar 1> /dev/null 2>&1; then
              mv *.jar backup/
            fi
            
            # Stop service
            pkill -f 'java.*$SERVICE_NAME' || true
            sleep 3
            
            # Start service
            nohup java -jar *.jar --server.port=$SERVICE_PORT --server.address=0.0.0.0 > app.log 2>&1 &
            echo \"Started with PID: \$!\"
            
            sleep 20
            
            if ss -tuln | grep -q \":$SERVICE_PORT\"; then
              echo '✅ Deployed successfully'
            else
              echo '❌ Deployment failed'
              exit 1
            fi
          "
